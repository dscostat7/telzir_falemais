version: "3"

networks:
  ps-lol:

services:
  # Web service layer
  nginx:
    image: nginx:1.13
    container_name: nginx
    volumes:
      - "./src:/var/www/html"
      - "./docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "80:80"
    depends_on:
      - php
    networks:
      - ps-lol

  # Application service layer
  php:
    build:
      context: docker/php
    container_name: php
    volumes:
      - "./src:/var/www/html"
    ports:
      - "9000:9000"
    depends_on:
      - mysql
    environment:
      - MYSQL_USER=root
      - MYSQL_PASS=123.456
    networks:
      - ps-lol

  # Data persistence service layer
  mysql:
    image: mysql:5.7.20
    container_name: mysql
    volumes:
      - "db_data3:/var/lib/mysql"
      - "./db:/docker-entrypoint-initdb.d"
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123.456
    networks:
      - ps-lol

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - "./src:/var/www/html"
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - ps-lol

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - "./src:/var/www/html"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - ps-lol

  artisan:
    build:
      context: docker/php
    container_name: artisan
    volumes:
      - "./src:/var/www/html"
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - ps-lol

volumes:
  db_data3:
